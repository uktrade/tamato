{% extends "layouts/form.jinja" %}

{% from 'macros/create_link.jinja' import create_link %}
{% from 'macros/footnotes_display.jinja' import footnotes_display %}
{% from "includes/measures/conditions.jinja" import conditions_list %}
{% from "components/breadcrumbs/macro.njk" import govukBreadcrumbs %}
{% from "components/button/macro.njk" import govukButton %}
{% from "includes/workbaskets/navigation.jinja" import navigation %}
{% from "components/table/macro.njk" import govukTable %}

{% set page_title %}
  Workbasket {{ workbasket.id if workbasket else request.user.current_workbasket.id }} - Compare with worksheet data
{% endset %}

{% set change_workbasket_details_link = url("workbaskets:workbasket-ui-update", kwargs={"pk": workbasket.pk}) %}

{% block breadcrumb %}
  {{ govukBreadcrumbs({
      "items": [
      {"text": "Home", "href": url("home")},
      {"text": "Edit an existing workbasket", "href": url("workbaskets:workbasket-ui-list")},
      {"text": "Workbasket " ~ request.user.current_workbasket.id ~ " - Summary", "href": url("workbaskets:current-workbasket") },
      {"text": "Workbasket " ~ request.user.current_workbasket.id ~ " - Checks", "href": url("workbaskets:workbasket-checks") },
      {"text": "Workbasket " ~ request.user.current_workbasket.id ~ " - Compare" }
    ]})
  }}
{% endblock %}

{% block content %}
  <h1 class="govuk-heading-xl govuk-!-margin-bottom-3">
    {{ page_title }}
  </h1>

  {{ navigation(request, "check") }}
    <h2 class="govuk-heading-m">Introduction</h2>
    <p class="govuk-body">You can use this checker to compare worksheet measure data (specifically commodity codes, duty rates, start dates and end dates) with measures in your workbasket. It will list all matching measures that are in both your worksheet and workbasket.</p>
    <p class="govuk-body">Currently, it won’t show you any measures that are in your worksheet but not in your workbasket and vice versa. It also won’t check whether you are comparing the same number of worksheet and workbasket measures.</p>

    <h2 class="govuk-heading-m">Worksheet data</h2>
    <p class="govuk-body">Paste your worksheet data below. This must include commodity codes, duty rates and start dates. End dates are optional.</p>
    <p class="govuk-body">If you are pasting both start and end dates, the start dates must appear before the end dates.</p>
    <p class="govuk-body">Duty rates must be to 3 decimal places and dates must be in a DD/MM/YYYY format (e.g. 01/01/2024).</p>

  {% call django_form() %}
    {{ crispy(form) }}
  {% endcall %}

  {% if data_upload %}
    <h2 class="govuk-heading-l">Formatted worksheet data</h2>
    <p class="govuk-body">This is your worksheet data in a table format.</p>
    {% set table_rows = [] %}
    {% for row in data_upload.serialized %}
      {{ table_rows.append([
        {"text": row.commodity if row.commodity else "—"},
        {"text": row.duty_sentence if row.duty_sentence else "—" },
        {"text": "{:%d %b %Y}".format(row.valid_between.lower) },
        {"text": "{:%d %b %Y}".format(row.valid_between.upper) if row.valid_between.upper else "—" },
      ]) or "" }}
    {% endfor %}

    {{ govukTable({
      "head": [
        {"text": "Commodity code"},
        {"text": "Duties"},
        {"text": "Start date"},
        {"text": "End date"},
      ],
      "rows": table_rows,
      "classes": "govuk-table-m"
    }) }}

  {% endif %}
  {% if data_upload %}
  <h2 class="govuk-heading-l">{{ matching_measures|length }} matching measure{{ matching_measures|pluralize }} found</h2>
  {% endif %}
  {% if matching_measures %}
    <p class="govuk-body">These are measures that are the same across both your worksheet and your workbasket.</p>

    {% set table_rows = [] %}
    {% for measure in matching_measures %}
      {% set measure_link -%}
        <a class="govuk-link govuk-!-font-weight-bold" href="{{ measure.get_url() }}">{{measure.sid}}</a>
      {%- endset %}
      {{ table_rows.append([
        {"html": measure_link},
        {"text": measure.measure_type.sid ~ " - " ~ measure.measure_type.description},
        {"text": create_link(url("commodity-ui-detail", kwargs={"sid": measure.goods_nomenclature.sid}), measure.goods_nomenclature.item_id) if measure.goods_nomenclature else '-', "classes": "govuk-!-width-one-eighth"},
        {"text": measure.duty_sentence if measure.duty_sentence else '-'},
        {"text": "{:%d %b %Y}".format(measure.valid_between.lower) },
        {"text": "{:%d %b %Y}".format(measure.effective_end_date) if measure.effective_end_date else "-" },
        {"html": create_link(url("additional_code-ui-detail", kwargs={"sid": measure.additional_code.sid}), measure.additional_code.type.sid ~ measure.additional_code.code) if measure.additional_code else '-'},
        {"html": create_link(url("geo_area-ui-detail", kwargs={"sid": measure.geographical_area.sid}), measure.geographical_area.area_id ~ " - " ~ measure.geographical_area.get_description().description) if measure.geographical_area else '-'},
        {"text": create_link(measure.order_number.get_url(), measure.order_number.order_number) if measure.order_number else '-'},
        {"text": footnotes_display(measure.footnoteassociationmeasure_set.current())},
        {"text": conditions_list(measure, workbasket) if measure.conditions.current() else "-"},
      ]) or "" }}
    {% endfor %}

    {{ govukTable({
      "head": [
        {"text": "Measure SID"},
        {"text": "Measure type"},
        {"text": "Commodity code"},
        {"text": "Duties"},
        {"text": "Start date"},
        {"text": "End date"},
        {"text": "Additional code"},
        {"text": "Geographical area"},
        {"text": "Quota"},
        {"text": "Footnote"},
        {"text": "Conditions"},
      ],
      "rows": table_rows,
      "classes": "govuk-table-m"
    }) }}

  {% endif %}

{% endblock %}

name: Check PR

on:
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
      # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Node
      uses: actions/setup-node@v1
      with:
        node-version: "14.15.1"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        npm install

    - name: Collect static assets
      run: |
        npm run build
        python manage.py collectstatic --noinput

    - name: Run Tests
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
        DJANGO_SETTINGS_MODULE: settings.test
      run: |
        python manage.py test -- --cov --cov-report=xml --alluredir=allure-results --nomigrations

    - name: Run Linter
      run: |
        black --check .

    - name: Report code coverage
      uses: codecov/codecov-action@v1

    - name: Generate test result report
      uses: afiore/action-allure-report@v0.1.0

    - name: Upload test result report
      uses: actions/upload-artifact@v1
      with:
        name: test-results-report
        path: allure-report

    - name: Build documentation
      uses: ammaraskar/sphinx-action@0.4
      with:
        pre-build-command: "apt-get update -y && apt-get install -y git-core python-dev build-essential libxml2-dev libxslt1-dev libz-dev"
        docs-folder: "."
        build-command: "sphinx-build -b html -c docs/ . _build"

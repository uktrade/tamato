{% extends "measures/create-wizard-step.jinja" %}
{% from "components/inset-text/macro.njk" import govukInsetText %}
{% from "components/summary-list/macro.njk" import govukSummaryList %}
{% from 'includes/measures/macros/conditions.jinja' import requirement %}

{% set page_title = step_metadata[wizard.steps.current].title %}

{% macro review_step(step) %}
  {% set link_text = step_metadata[step].link_text %}
  <h2 class="govuk-heading-m">{{ link_text }}</h2>
  {% set rows = [] %}
  {% set data = view.get_cleaned_data_for_step(step) %}

  {% set ignore %}
  {{ caller(rows, data) }}
  {% endset %}

  {% set row_data = [] %}
  {% if rows %}
    {% for label, value in rows %}
      {{ row_data.append({
        "key": {"text": label},
        "value": {"text": value},
        "actions": {
          "items": [
            {
              "text": "Change",
              "visuallyHiddenText": label|lower,
              "href": view.get_step_url(step),
              "attributes": {}
            }
          ]
        }
      }) or "" }}
    {% endfor %}
  {% else %}
    {{ row_data.append({
      "key": {"text": link_text},
      "value": {"text": "None"},
      "actions": {
        "items": [
          {
            "text": "Change",
            "visuallyHiddenText": link_text,
            "href": view.get_step_url(step),
            "attributes": {}
          }
        ]
      }
    }) or "" }}
  {% endif %}
  {{ govukSummaryList({"rows": row_data, "classes": "govuk-!-margin-bottom-9"}) }}
{% endmacro %}

{% macro display_geographical_data(rows, data) %}
  {% for geo_data in data.geo_areas_and_exclusions %}
    {{ rows.extend([
      ("Geographical area", geo_data["geo_area"].get_description().description|safe),
    ]) }}
    {% if geo_data.get("exclusions") %}
      {% for exclusion in geo_data["exclusions"] %}
        {{ rows.extend([
          ("Excluded geographical area", exclusion.get_description().description|safe),
        ]) }}
      {% endfor %}
    {% endif %}
  {% endfor %}
{% endmacro %}

{% block form %}
  {% call(rows, data) review_step("measure_details") %}
    {{ rows.extend([
      ("Measure type", data["measure_type"] ~ " - " ~ data["measure_type"].description),
      ("Measure start date", "{:%d/%m/%Y}".format(data["valid_between"].lower) if data["valid_between"] and data["valid_between"].lower else "-"),
      ("Measure end date", "{:%d/%m/%Y}".format(data["valid_between"].upper) if data["valid_between"] and data["valid_between"].upper else "-"),
    ]) }}
  {% endcall %}

  {% call(rows, data) review_step("regulation_id") %}
    {{ rows.extend([
      ("Regulation ID", data["generating_regulation"]),
    ]) }}
  {% endcall %}

  {% call(rows, data) review_step("quota_order_number") %}
    {{ rows.extend([
      ("Quota order number", data["order_number"]),
    ]) }}
  {% endcall %}

  {% if view.get_cleaned_data_for_step("quota_origins") %}
    {% call(rows, data) review_step("quota_origins") %}
      {{ display_geographical_data(rows, data) }}
    {% endcall %}
  {% else %}
    {% call(rows, data) review_step("geographical_area") %}
      {{ display_geographical_data(rows, data) }}
    {% endcall %}
  {% endif %}

  {% call(rows, data) review_step("commodities") %}
    {% for item in data %}
      {{ rows.extend([
        ("Commodity code", item["commodity"] ~ " - " ~ item["commodity"].get_description().description|safe if item["commodity"] else "None"),
        ("Duty", item["duties"]),
      ]) }}
    {% endfor %}
  {% endcall %}

  {% call(rows, data) review_step("additional_code") %}
    {{ rows.extend([
      ("Additional code", data["additional_code"] ~ " - " ~ data["additional_code"].get_description().description|safe if data["additional_code"] else "None"),
    ]) }}
  {% endcall %}

  {% call(rows, data) review_step("conditions") %}
    {# Conditions are optional, so cater for empty data. #}
    {% if data %}
      {% for item in data  %}
        {% if not item.DELETE %}
          {{ rows.extend([
            ("Condition code", item.condition_code),
            ("Required certificate or amount", requirement(item)),
            ("Action", item.action.description),
            ("Applicable duties", item.applicable_duty if item.applicable_duty else "-"),
          ]) }}
        {% endif %}
      {% endfor %}
    {% endif %}
  {% endcall %}

  {% call(rows, data) review_step("footnotes") %}
    {# Footnotes are optional, so cater for empty data. #}
    {% if data %}
      {% for item in data %}
        {% if not item.DELETE %}
          {{ rows.append(("Footnote", item.footnote ~ " - " ~ item.footnote.get_description().description|safe)) }}
        {% endif %}
      {% endfor %}
    {% endif %}
  {% endcall %}
  {{ govukButton({"text": "Create", "preventDoubleClick": true}) }}
{% endblock %}
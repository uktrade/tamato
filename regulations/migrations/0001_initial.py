# Generated by Django 3.0.4 on 2020-06-05 09:03

import django.contrib.postgres.fields.ranges
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import regulations.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Amendment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Extension",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("effective_end_date", models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Group",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "valid_between",
                    django.contrib.postgres.fields.ranges.DateTimeRangeField(),
                ),
                ("live", models.BooleanField(default=False)),
                (
                    "group_id",
                    models.CharField(
                        editable=False,
                        max_length=3,
                        validators=[
                            django.core.validators.RegexValidator("[A-Z][A-Z][A-Z]")
                        ],
                    ),
                ),
                ("description", models.CharField(editable=False, max_length=500)),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="Regulation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role_type",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "Base"),
                            (2, "Provisional Anti-Dumping"),
                            (3, "Definitive Anti-Dumping"),
                            (4, "Modification"),
                            (5, "Prorogation"),
                            (6, "Complete Abrogation"),
                            (7, "Explicit Abrogation"),
                            (8, "Full Temporary Stop"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "regulation_id",
                    models.CharField(
                        editable=False,
                        max_length=8,
                        validators=[regulations.validators.RegulationIDValidator()],
                    ),
                ),
                ("official_journal_number", models.CharField(max_length=5, null=True)),
                (
                    "official_journal_page",
                    models.PositiveSmallIntegerField(
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(9999)],
                    ),
                ),
                ("published_at", models.DateField(null=True)),
                (
                    "information_text",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("approved", models.BooleanField(default=False)),
                (
                    "replacement_indicator",
                    models.PositiveIntegerField(
                        choices=[
                            (0, "Not Replaced"),
                            (1, "Replaced"),
                            (2, "Partially Replaced"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "valid_between",
                    django.contrib.postgres.fields.ranges.DateTimeRangeField(null=True),
                ),
                ("effective_end_date", models.DateField(null=True)),
                ("stopped", models.BooleanField(default=False)),
                (
                    "community_code",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "Economic"),
                            (2, "Atomic"),
                            (3, "Coal"),
                            (4, "Economic/Coal"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "amends",
                    models.ManyToManyField(
                        related_name="_regulation_amends_+",
                        through="regulations.Amendment",
                        to="regulations.Regulation",
                    ),
                ),
                (
                    "extends",
                    models.ManyToManyField(
                        related_name="_regulation_extends_+",
                        through="regulations.Extension",
                        to="regulations.Regulation",
                    ),
                ),
                (
                    "regulation_group",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="regulations.Group",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Termination",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("effective_date", models.DateField()),
                (
                    "regulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="regulations.Regulation",
                    ),
                ),
                (
                    "terminated",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="terminations",
                        to="regulations.Regulation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Suspension",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("effective_end_date", models.DateField(null=True)),
                (
                    "regulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="regulations.Regulation",
                    ),
                ),
                (
                    "suspended",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="suspensions",
                        to="regulations.Regulation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Replacement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("measure_type_id", models.CharField(max_length=6, null=True)),
                ("geographical_area_id", models.CharField(max_length=4, null=True)),
                ("chapter_heading", models.CharField(max_length=2, null=True)),
                (
                    "regulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="regulations.Regulation",
                    ),
                ),
                (
                    "replaced",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="replacements",
                        to="regulations.Regulation",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="regulation",
            name="replaces",
            field=models.ManyToManyField(
                related_name="_regulation_replaces_+",
                through="regulations.Replacement",
                to="regulations.Regulation",
            ),
        ),
        migrations.AddField(
            model_name="regulation",
            name="suspends",
            field=models.ManyToManyField(
                related_name="_regulation_suspends_+",
                through="regulations.Suspension",
                to="regulations.Regulation",
            ),
        ),
        migrations.AddField(
            model_name="regulation",
            name="terminates",
            field=models.ManyToManyField(
                related_name="_regulation_terminates_+",
                through="regulations.Termination",
                to="regulations.Regulation",
            ),
        ),
        migrations.AddField(
            model_name="extension",
            name="extended",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="extensions",
                to="regulations.Regulation",
            ),
        ),
        migrations.AddField(
            model_name="extension",
            name="regulation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="regulations.Regulation",
            ),
        ),
        migrations.AddField(
            model_name="amendment",
            name="amended",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="amendments",
                to="regulations.Regulation",
            ),
        ),
        migrations.AddField(
            model_name="amendment",
            name="regulation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="regulations.Regulation",
            ),
        ),
    ]

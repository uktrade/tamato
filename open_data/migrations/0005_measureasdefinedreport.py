# Generated by Django 4.2.16 on 2025-02-07 12:23

from django.db import migrations
from django.db import models

from open_data.models.utils import migrate_to_postgres


class Migration(migrations.Migration):

    # schema is not supported by sqlite.
    if migrate_to_postgres():
        schema_name = 'reporting"."'
    else:
        schema_name = ""

    dependencies = [
        ("open_data", "0004_materialised_view"),
    ]

    operations = [
        migrations.CreateModel(
            name="MeasureAsDefinedReport",
            fields=[
                ("id_counter", models.IntegerField()),
                (
                    "trackedmodel_ptr_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                (
                    "commodity_sid",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "commodity_code",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "commodity_indent",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("commodity_description", models.TextField(blank=True, null=True)),
                ("measure_sid", models.IntegerField()),
                (
                    "measure_type_id",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "measure_type_description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "measure_additional_code_code",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "measure_additional_code_description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "measure_duty_expression",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("measure_effective_start_date", models.DateField()),
                ("measure_effective_end_date", models.DateField(blank=True, null=True)),
                (
                    "measure_reduction_indicator",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("measure_footnotes", models.TextField(blank=True, null=True)),
                (
                    "measure_conditions",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "measure_geographical_area_sid",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "measure_geographical_area_id",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "measure_geographical_area_description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "measure_excluded_geographical_areas_ids",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "measure_excluded_geographical_areas_descriptions",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "measure_quota_order_number",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "measure_regulation_id",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "measure_regulation_url",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
            ],
            options={
                "db_table": f"{schema_name}open_data_reportmeasure_as_defined_report",
            },
        ),
    ]

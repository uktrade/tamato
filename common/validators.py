from django.core.exceptions import ValidationError
from django.utils.deconstruct import deconstructible


@deconstructible
class NumericSIDValidator:
    """Validates TARIC SID values.

    A TARIC SID is a unique number generated by the system as an internal access key.
    This will be used in areas where there is a need to change access key data
    dynamically, or where the logical key is too long.

    It is commonly a number between 1 and 99999999 (max 8 digits).
    """

    def __init__(self, max_value=99999999):
        self.max_value = max_value

    def __call__(self, value):
        if not (1 <= value <= self.max_value):
            raise ValidationError(
                "%(value)s is not a valid SID - must be between 1 and %(max)s.",
                params={"value": value, "max": self.max_value},
            )

    def __eq__(self, other):
        if isinstance(other, NumericSIDValidator):
            return other.max_value == self.max_value
        return False

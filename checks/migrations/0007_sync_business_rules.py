# Data Migration, written by sync_business_rules.
# Generated by Django 3.1.14 on 2022-08-23 23:20

from django.db import migrations

added_rules = [
    "ACN1",
    "ACN13",
    "ACN14",
    "ACN17",
    "ACN2",
    "ACN4",
    "ACN5",
    "ActionRequiresDuty",
    "BlockingOnlyOfFCFSQuotas",
    "CE2",
    "CE4",
    "CE5",
    "CE6",
    "CE7",
    "CET1",
    "CET2",
    "CT1",
    "CertificateValidityPeriodMustSpanQuotaOrderNumber",
    "CertificatesMustExist",
    "ComponentApplicability",
    "ConditionCodeAcceptance",
    "DescriptionNotEmpty",
    "DescriptionsRules",
    "ExclusionMembership",
    "FO11",
    "FO12",
    "FO15",
    "FO17",
    "FO2",
    "FO4",
    "FO5",
    "FO6",
    "FO9",
    "FOT1",
    "FOT2",
    "FootnoteApplicability",
    "GA1",
    "GA10",
    "GA11",
    "GA12",
    "GA13",
    "GA14",
    "GA16",
    "GA17",
    "GA18",
    "GA19",
    "GA20",
    "GA21",
    "GA22",
    "GA23",
    "GA3",
    "GA4",
    "GA5",
    "GA6",
    "GA7",
    "MA1",
    "MA2",
    "MA4",
    "MC1",
    "MC3",
    "MC4",
    "ME1",
    "ME10",
    "ME104",
    "ME105",
    "ME106",
    "ME108",
    "ME109",
    "ME110",
    "ME111",
    "ME115",
    "ME116",
    "ME117",
    "ME119",
    "ME12",
    "ME16",
    "ME17",
    "ME2",
    "ME24",
    "ME25",
    "ME27",
    "ME3",
    "ME32",
    "ME33",
    "ME34",
    "ME4",
    "ME40",
    "ME41",
    "ME42",
    "ME43",
    "ME45",
    "ME46",
    "ME47",
    "ME48",
    "ME49",
    "ME5",
    "ME50",
    "ME51",
    "ME52",
    "ME53",
    "ME56",
    "ME57",
    "ME58",
    "ME59",
    "ME6",
    "ME60",
    "ME61",
    "ME62",
    "ME63",
    "ME64",
    "ME65",
    "ME66",
    "ME67",
    "ME68",
    "ME69",
    "ME7",
    "ME70",
    "ME71",
    "ME73",
    "ME8",
    "ME87",
    "ME88",
    "ME9",
    "MT1",
    "MT10",
    "MT3",
    "MT4",
    "MT7",
    "MTS1",
    "MTS2",
    "MeasureComponentApplicability",
    "MeasureConditionComponentApplicability",
    "MustExist",
    "NIG1",
    "NIG10",
    "NIG11",
    "NIG12",
    "NIG18",
    "NIG2",
    "NIG22",
    "NIG23",
    "NIG24",
    "NIG30",
    "NIG31",
    "NIG34",
    "NIG35",
    "NIG5",
    "NIG7",
    "NoBlankDescription",
    "NoOverlapping",
    "ON1",
    "ON10",
    "ON11",
    "ON12",
    "ON13",
    "ON14",
    "ON2",
    "ON5",
    "ON6",
    "ON7",
    "ON8",
    "ON9",
    "OverlappingQuotaDefinition",
    "PreventDeleteIfInUse",
    "PreventDeletingLinkedQuotaDefinitions",
    "PreventQuotaDefinitionDeletion",
    "QA1",
    "QA2",
    "QA3",
    "QA4",
    "QA5",
    "QA6",
    "QBP2",
    "QD1",
    "QD10",
    "QD11",
    "QD7",
    "QD8",
    "QSP2",
    "QuotaAssociationMustReferToANonDeletedSubQuota",
    "QuotaBlockingPeriodMustReferToANonDeletedQuotaDefinition",
    "QuotaSuspensionMustReferToANonDeletedQuotaDefinition",
    "ROIMB1",
    "ROIMB4",
    "ROIMB44",
    "ROIMB46",
    "ROIMB47",
    "ROIMB8",
    "SameMainAndSubQuota",
    "SuspensionsOnlyToFCFSQuotas",
    "UniqueIdentifyingFields",
    "UpdateValidity",
    "ValidityPeriodContained",
    "ValidityStartDateRules",
]
removed_rules = []


def add_rules(apps, schema_editor, rule_names):
    BusinessRuleModel = apps.get_model("checks", "BusinessRuleModel")

    rules = [BusinessRuleModel(name=name) for name in rule_names]
    BusinessRuleModel.objects.bulk_create(rules)


def mark_removed_rules(apps, schema_editor, rule_names):
    BusinessRuleModel = apps.get_model("checks", "BusinessRuleModel")
    BusinessRuleModel.objects.filter(name__in=rule_names).update(current=False)


def forward_sync_rules(apps, schema_editor):
    add_rules(apps, schema_editor, added_rules)
    mark_removed_rules(apps, schema_editor, removed_rules)


def reverse_sync_rules(apps, schema_editor):
    """
    Attempt to delete rules - developer may need to edit this to remove
    related models.
    """
    BusinessRuleModel = apps.get_model("checks", "BusinessRuleModel")
    BusinessRuleModel.objects.filter(name__in=added_rules).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("checks", "0006_auto_20220823_2319"),
    ]

    operations = [
        migrations.RunPython(forward_sync_rules, reverse_sync_rules),
    ]

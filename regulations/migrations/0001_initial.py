# Generated by Django 3.1 on 2021-01-06 15:33
import django.contrib.postgres.fields.ranges
import django.core.validators
import django.db.models.deletion
from django.db import migrations
from django.db import models

import common.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("common", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Amendment",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel",),
        ),
        migrations.CreateModel(
            name="Extension",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                ("effective_end_date", models.DateField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel",),
        ),
        migrations.CreateModel(
            name="Group",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                ("valid_between", common.fields.TaricDateTimeRangeField(db_index=True)),
                (
                    "group_id",
                    models.CharField(
                        db_index=True,
                        editable=False,
                        max_length=3,
                        validators=[
                            django.core.validators.RegexValidator("[A-Z][A-Z][A-Z]")
                        ],
                    ),
                ),
                ("description", common.fields.ShortDescription()),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel", models.Model),
        ),
        migrations.CreateModel(
            name="Regulation",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                (
                    "role_type",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "Base"),
                            (2, "Provisional anti-dumping"),
                            (3, "Definitive anti-dumping"),
                            (4, "Modification"),
                            (5, "Prorogation"),
                            (6, "Complete abrogation"),
                            (7, "Explicit abrogation"),
                            (8, "Full temporary stop"),
                        ],
                        db_index=True,
                        default=1,
                        editable=False,
                    ),
                ),
                (
                    "regulation_id",
                    models.CharField(
                        db_index=True,
                        editable=False,
                        help_text="The regulation number",
                        max_length=8,
                        validators=[
                            django.core.validators.RegexValidator(
                                "(?x)\n    ((?P<prefix>C|R|D|A|I|J|P|U|S|X|N|M|Q|0)\n    (?P<year>\\d{2})\n    (?P<number>\\d{4})\n    (?P<suffix>[0-9A-Z]))|\n    ((?P<national_prefix>Z|V)\n    (?P<national_year>\\d{4})\n    (?P<national_suffix>[A-Z]{3}))|\n    ((?P<dummy_prefix>IYY)\n    (?P<dummy_suffix>\\d{5}))\n"
                            )
                        ],
                    ),
                ),
                (
                    "official_journal_number",
                    models.CharField(
                        blank=True, default="1", editable=False, max_length=5, null=True
                    ),
                ),
                (
                    "official_journal_page",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        default=1,
                        editable=False,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(9999)],
                    ),
                ),
                (
                    "published_at",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                (
                    "information_text",
                    common.fields.ShortDescription(
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[^|]*$", "Must not contain '|'"
                            )
                        ]
                    ),
                ),
                (
                    "public_identifier",
                    models.CharField(
                        blank=True,
                        help_text="This is the name of the regulation as it would appear on (for example) legislation.gov.uk",
                        max_length=50,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[^|]*$", "Must not contain '|'"
                            )
                        ],
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        blank=True,
                        help_text="Please enter the absolute URL of the regulation",
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[^|]*$", "Must not contain '|'"
                            )
                        ],
                    ),
                ),
                ("approved", models.BooleanField(default=False)),
                (
                    "replacement_indicator",
                    models.PositiveIntegerField(
                        choices=[
                            (0, "Not replaced"),
                            (1, "Replaced"),
                            (2, "Partially replaced"),
                        ],
                        default=0,
                        editable=False,
                    ),
                ),
                (
                    "valid_between",
                    django.contrib.postgres.fields.ranges.DateTimeRangeField(
                        blank=True, null=True
                    ),
                ),
                (
                    "effective_end_date",
                    models.DateField(blank=True, editable=False, null=True),
                ),
                ("stopped", models.BooleanField(default=False)),
                (
                    "community_code",
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[
                            (1, "Economic"),
                            (2, "Atomic"),
                            (3, "Coal"),
                            (4, "Economic/Coal"),
                        ],
                        default=1,
                        null=True,
                    ),
                ),
                (
                    "amends",
                    models.ManyToManyField(
                        related_name="_regulation_amends_+",
                        through="regulations.Amendment",
                        to="regulations.Regulation",
                    ),
                ),
                (
                    "extends",
                    models.ManyToManyField(
                        related_name="_regulation_extends_+",
                        through="regulations.Extension",
                        to="regulations.Regulation",
                    ),
                ),
                (
                    "regulation_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="regulations.group",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel",),
        ),
        migrations.CreateModel(
            name="Termination",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                ("effective_date", models.DateField()),
                (
                    "enacting_regulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="regulations.regulation",
                    ),
                ),
                (
                    "target_regulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="terminations",
                        to="regulations.regulation",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel",),
        ),
        migrations.CreateModel(
            name="Suspension",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                ("effective_end_date", models.DateField(blank=True, null=True)),
                (
                    "enacting_regulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="regulations.regulation",
                    ),
                ),
                (
                    "target_regulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="suspensions",
                        to="regulations.regulation",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel",),
        ),
        migrations.CreateModel(
            name="Replacement",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                (
                    "measure_type_id",
                    models.CharField(
                        blank=True,
                        max_length=6,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[0-9]{3}|[0-9]{6}|[A-Z]{3}$"
                            )
                        ],
                    ),
                ),
                (
                    "geographical_area_id",
                    models.CharField(
                        blank=True,
                        max_length=4,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Z0-9]{2}$|^[A-Z0-9]{4}$"
                            )
                        ],
                    ),
                ),
                (
                    "chapter_heading",
                    models.CharField(blank=True, max_length=2, null=True),
                ),
                (
                    "enacting_regulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="regulations.regulation",
                    ),
                ),
                (
                    "target_regulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="replacements",
                        to="regulations.regulation",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel",),
        ),
        migrations.AddField(
            model_name="regulation",
            name="replaces",
            field=models.ManyToManyField(
                related_name="_regulation_replaces_+",
                through="regulations.Replacement",
                to="regulations.Regulation",
            ),
        ),
        migrations.AddField(
            model_name="regulation",
            name="suspends",
            field=models.ManyToManyField(
                related_name="_regulation_suspends_+",
                through="regulations.Suspension",
                to="regulations.Regulation",
            ),
        ),
        migrations.AddField(
            model_name="regulation",
            name="terminates",
            field=models.ManyToManyField(
                related_name="_regulation_terminates_+",
                through="regulations.Termination",
                to="regulations.Regulation",
            ),
        ),
        migrations.AddField(
            model_name="extension",
            name="enacting_regulation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="regulations.regulation",
            ),
        ),
        migrations.AddField(
            model_name="extension",
            name="target_regulation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="extensions",
                to="regulations.regulation",
            ),
        ),
        migrations.AddField(
            model_name="amendment",
            name="enacting_regulation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="regulations.regulation",
            ),
        ),
        migrations.AddField(
            model_name="amendment",
            name="target_regulation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="amendments",
                to="regulations.regulation",
            ),
        ),
    ]

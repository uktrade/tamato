# Generated by Django 3.1.2 on 2020-10-16 11:12
import django.contrib.postgres.constraints
import django.contrib.postgres.fields.ranges
import django.db.models.deletion
from django.db import migrations
from django.db import models

from common.validators import UpdateType


def add_indents(apps, schema_editor):
    GoodsNomenclatureIndentNode = apps.get_model(
        "commodities", "GoodsNomenclatureIndentNode"
    )
    GoodsNomenclatureIndent = apps.get_model("commodities", "GoodsNomenclatureIndent")

    for node in GoodsNomenclatureIndentNode.objects.all():
        indent = GoodsNomenclatureIndent.objects.create(
            sid=node.sid,
            indented_goods_nomenclature=node.indented_goods_nomenclature,
            valid_between=node.valid_between,
            workbasket=node.workbasket,
            update_type=UpdateType.CREATE.value,
        )
        node.indent = indent
        node.save()


class Migration(migrations.Migration):

    dependencies = [
        ("common", "0004_refactor_update_type"),
        ("commodities", "0004_auto_20201016_1106"),
    ]

    operations = [
        migrations.CreateModel(
            name="GoodsNomenclatureIndent",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                (
                    "valid_between",
                    django.contrib.postgres.fields.ranges.DateTimeRangeField(),
                ),
                (
                    "sid",
                    models.PositiveIntegerField(
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(99999999),
                        ],
                    ),
                ),
            ],
            bases=("common.trackedmodel", models.Model),
        ),
        migrations.RemoveConstraint(
            model_name="goodsnomenclatureindentnode",
            name="exclude_overlapping_goods_indents",
        ),
        migrations.AlterField(
            model_name="goodsnomenclatureindentnode",
            name="indented_goods_nomenclature",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                db_index=False,
                related_name="+",
                to="commodities.goodsnomenclature",
            ),
        ),
        # This double alter looks weird but it is the only way to easily
        # change the FK index name (https://code.djangoproject.com/ticket/23577)
        migrations.AlterField(
            model_name="goodsnomenclatureindentnode",
            name="indented_goods_nomenclature",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                db_index=True,
                related_name="+",
                to="commodities.goodsnomenclature",
            ),
        ),
        migrations.AddField(
            model_name="goodsnomenclatureindent",
            name="indented_goods_nomenclature",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="gn_indents",
                to="commodities.goodsnomenclature",
            ),
        ),
        migrations.AddField(
            model_name="goodsnomenclatureindentnode",
            name="indent",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="nodes",
                to="commodities.goodsnomenclatureindent",
            ),
        ),
        migrations.AddConstraint(
            model_name="goodsnomenclatureindent",
            constraint=django.contrib.postgres.constraints.ExclusionConstraint(
                expressions=[("valid_between", "&&"), ("sid", "=")],
                name="exclude_overlapping_goods_indents",
            ),
        ),
        migrations.RunPython(add_indents),
        migrations.AlterField(
            model_name="goodsnomenclatureindentnode",
            name="indent",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="nodes",
                to="commodities.goodsnomenclatureindent",
            ),
        ),
        migrations.AlterField(
            model_name="goodsnomenclatureindent",
            name="sid",
            field=models.PositiveIntegerField(
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(99999999),
                ]
            ),
        ),
    ]

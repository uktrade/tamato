name: CI/CD

on:
  push:
    branches: [master, TP2000-1336-Integrate-Cypress-testing-framework-to-TAP]
  pull_request:
    branches: [master]

jobs:
  test:
    name: "Run tests"
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: ./.github/actions/setup-python

    - name: Set up Node
      uses: ./.github/actions/setup-node

    - name: Collect static assets
      run: |
        npm run build
        python manage.py collectstatic --noinput

    - name: Check for missing migrations
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
        DJANGO_SETTINGS_MODULE: settings.test
      run: |
        python manage.py makemigrations --dry-run --check

    # - name: Run tests
    #   env:
    #     DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
    #     DJANGO_SETTINGS_MODULE: settings.test
    #   run: |
    #     make test

    - name: Report code coverage
      uses: codecov/codecov-action@v1

    - name: Cypress run
      uses: cypress-io/github-action@v6
      with:
        browser: chrome
        script: |
        sudo kill $(ps aux | grep gunicorn | grep -v grep | awk ‘{print $2}’)
        sudo /home/ubuntu/polls/.venv/bin/gunicorn — daemon —  workers=4 wsgi:application -b 0.0.0.0:8000

  lint:
    name: "Lint and static checks"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: ./.github/actions/setup-python

    - name: Run linter
      run: |
        black --check .

  docs:
    name: "Build documentation"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Graphviz
      uses: ts-graphviz/setup-graphviz@v1

    - name: Set up Python
      uses: ./.github/actions/setup-python

    - name: Build documentation
      run: make clean-docs build-docs

    - name: Publish documentation to Github Pages
      if: ${{ github.ref == 'refs/heads/master' }}
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs/build

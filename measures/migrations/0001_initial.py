# Generated by Django 3.1 on 2021-01-06 15:33
import django.core.validators
import django.db.models.deletion
from django.db import migrations
from django.db import models

import common.fields
import common.validators
import measures.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("commodities", "0001_initial"),
        ("common", "0001_initial"),
        ("geo_areas", "0001_initial"),
        ("footnotes", "0001_initial"),
        ("regulations", "0001_initial"),
        ("additional_codes", "0001_initial"),
        ("certificates", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AdditionalCodeTypeMeasureType",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                ("valid_between", common.fields.TaricDateTimeRangeField(db_index=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel", models.Model),
        ),
        migrations.CreateModel(
            name="DutyExpression",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                ("valid_between", common.fields.TaricDateTimeRangeField(db_index=True)),
                (
                    "sid",
                    models.IntegerField(
                        choices=[
                            (1, "% or amount"),
                            (2, "minus\xa0% or amount"),
                            (3, "The rate is replaced by the levy"),
                            (4, "+\xa0% or amount"),
                            (5, "The rate is replaced by the reduced levy"),
                            (6, "+ Suplementary amount"),
                            (7, "+ Levy"),
                            (9, "+ Reduced levy"),
                            (11, "+ Variable component"),
                            (12, "+ agricultural component"),
                            (13, "+ Reduced variable component"),
                            (14, "+ reduced agricultural component"),
                            (15, "Minimum"),
                            (17, "Maximum"),
                            (19, "+\xa0% or amount"),
                            (20, "+\xa0% or amount"),
                            (21, "+ additional duty on sugar"),
                            (23, "+ 2\xa0% Additional duty on sugar"),
                            (25, "+ reduced additional duty on sugar"),
                            (27, "+ additional duty on flour"),
                            (29, "+ reduced additional duty on flour"),
                            (31, "Accession compensatory amount"),
                            (33, "+ Accession compensatory amount"),
                            (35, "Maximum"),
                            (36, "minus\xa0% CIF"),
                            (37, "(nothing)"),
                            (40, "Export refunds for cereals"),
                            (41, "Export refunds for rice"),
                            (42, "Export refunds for eggs"),
                            (43, "Export refunds for sugar"),
                            (44, "Export refunds for milk products"),
                            (99, "Supplementary unit"),
                        ],
                        db_index=True,
                    ),
                ),
                ("prefix", models.CharField(blank=True, max_length=14)),
                ("duty_amount_applicability_code", common.fields.ApplicabilityCode()),
                (
                    "measurement_unit_applicability_code",
                    common.fields.ApplicabilityCode(),
                ),
                ("monetary_unit_applicability_code", common.fields.ApplicabilityCode()),
                ("description", common.fields.ShortDescription()),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel", models.Model),
        ),
        migrations.CreateModel(
            name="FootnoteAssociationMeasure",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel",),
        ),
        migrations.CreateModel(
            name="Measure",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                ("valid_between", common.fields.TaricDateTimeRangeField(db_index=True)),
                ("sid", common.fields.SignedIntSID()),
                (
                    "dead_additional_code",
                    models.CharField(
                        blank=True, db_index=True, max_length=16, null=True
                    ),
                ),
                (
                    "dead_order_number",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=6,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator("^[0-9]{6}$")
                        ],
                    ),
                ),
                (
                    "reduction",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        db_index=True,
                        null=True,
                        validators=[common.validators.NumberRangeValidator(1, 9)],
                    ),
                ),
                ("stopped", models.BooleanField(default=False)),
                (
                    "export_refund_nomenclature_sid",
                    common.fields.SignedIntSID(blank=True, default=None, null=True),
                ),
                (
                    "additional_code",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="additional_codes.additionalcode",
                    ),
                ),
                (
                    "footnotes",
                    models.ManyToManyField(
                        through="measures.FootnoteAssociationMeasure",
                        to="footnotes.Footnote",
                    ),
                ),
                (
                    "generating_regulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="regulations.regulation",
                    ),
                ),
                (
                    "geographical_area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="measures",
                        to="geo_areas.geographicalarea",
                    ),
                ),
                (
                    "goods_nomenclature",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="measures",
                        to="commodities.goodsnomenclature",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel", models.Model),
        ),
        migrations.CreateModel(
            name="MeasureAction",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                ("valid_between", common.fields.TaricDateTimeRangeField(db_index=True)),
                (
                    "code",
                    models.CharField(
                        db_index=True,
                        max_length=3,
                        validators=[measures.validators.validate_action_code],
                    ),
                ),
                ("description", common.fields.ShortDescription()),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel", models.Model),
        ),
        migrations.CreateModel(
            name="MeasureCondition",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                ("sid", common.fields.SignedIntSID()),
                (
                    "component_sequence_number",
                    models.PositiveSmallIntegerField(
                        validators=[common.validators.NumberRangeValidator(1, 999)]
                    ),
                ),
                (
                    "duty_amount",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=10, null=True
                    ),
                ),
                (
                    "action",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="measures.measureaction",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel",),
        ),
        migrations.CreateModel(
            name="MeasureConditionCode",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                ("valid_between", common.fields.TaricDateTimeRangeField(db_index=True)),
                (
                    "code",
                    models.CharField(
                        db_index=True,
                        max_length=2,
                        validators=[
                            django.core.validators.RegexValidator("^[A-Z][A-Z ]?$")
                        ],
                    ),
                ),
                ("description", common.fields.ShortDescription()),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel", models.Model),
        ),
        migrations.CreateModel(
            name="MeasurementUnit",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                ("valid_between", common.fields.TaricDateTimeRangeField(db_index=True)),
                (
                    "code",
                    models.CharField(
                        db_index=True,
                        max_length=3,
                        validators=[
                            django.core.validators.RegexValidator("^[A-Z0-9]{3}$")
                        ],
                    ),
                ),
                ("description", common.fields.ShortDescription()),
                ("abbreviation", models.CharField(blank=True, max_length=32)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel", models.Model),
        ),
        migrations.CreateModel(
            name="MeasurementUnitQualifier",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                ("valid_between", common.fields.TaricDateTimeRangeField(db_index=True)),
                (
                    "code",
                    models.CharField(
                        db_index=True,
                        max_length=1,
                        validators=[django.core.validators.RegexValidator("^[A-Z]$")],
                    ),
                ),
                ("description", common.fields.ShortDescription()),
                ("abbreviation", models.CharField(blank=True, max_length=32)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel", models.Model),
        ),
        migrations.CreateModel(
            name="MeasureTypeSeries",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                ("valid_between", common.fields.TaricDateTimeRangeField(db_index=True)),
                (
                    "sid",
                    models.CharField(
                        db_index=True,
                        max_length=2,
                        validators=[
                            django.core.validators.RegexValidator("^[A-Z][A-Z ]?$")
                        ],
                    ),
                ),
                (
                    "measure_type_combination",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (
                                0,
                                "Only 1 measure at export and 1 at import from the series",
                            ),
                            (1, "All measure types in the series to be considered"),
                        ]
                    ),
                ),
                ("description", common.fields.ShortDescription()),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel", models.Model),
        ),
        migrations.CreateModel(
            name="MonetaryUnit",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                ("valid_between", common.fields.TaricDateTimeRangeField(db_index=True)),
                (
                    "code",
                    models.CharField(
                        db_index=True,
                        max_length=3,
                        validators=[
                            django.core.validators.RegexValidator("^[A-Z]{3}$")
                        ],
                    ),
                ),
                ("description", common.fields.ShortDescription()),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel", models.Model),
        ),
        migrations.CreateModel(
            name="MeasureType",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                ("valid_between", common.fields.TaricDateTimeRangeField(db_index=True)),
                (
                    "sid",
                    models.CharField(
                        db_index=True,
                        max_length=6,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[0-9]{3}|[0-9]{6}|[A-Z]{3}$"
                            )
                        ],
                    ),
                ),
                (
                    "trade_movement_code",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Import"), (1, "Export"), (2, "Import/Export")]
                    ),
                ),
                (
                    "priority_code",
                    models.PositiveSmallIntegerField(
                        validators=[common.validators.NumberRangeValidator(1, 9)]
                    ),
                ),
                (
                    "measure_component_applicability_code",
                    common.fields.ApplicabilityCode(),
                ),
                (
                    "origin_destination_code",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Import"), (1, "Export"), (2, "Import/Export")]
                    ),
                ),
                (
                    "order_number_capture_code",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "Mandatory"), (2, "Not permitted")]
                    ),
                ),
                (
                    "measure_explosion_level",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (2, "Harmonised System Chapter"),
                            (4, "Harmonised System Heading"),
                            (6, "Harmonised System Subheading"),
                            (8, "Combined Nomenclature"),
                            (10, "TARIC"),
                        ],
                        validators=[
                            measures.validators.validate_measure_explosion_level
                        ],
                    ),
                ),
                ("description", common.fields.ShortDescription()),
                (
                    "additional_code_types",
                    models.ManyToManyField(
                        through="measures.AdditionalCodeTypeMeasureType",
                        to="additional_codes.AdditionalCodeType",
                    ),
                ),
                (
                    "measure_type_series",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="measures.measuretypeseries",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel", models.Model),
        ),
        migrations.CreateModel(
            name="Measurement",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                ("valid_between", common.fields.TaricDateTimeRangeField(db_index=True)),
                (
                    "measurement_unit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="measures.measurementunit",
                    ),
                ),
                (
                    "measurement_unit_qualifier",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="measures.measurementunitqualifier",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel", models.Model),
        ),
        migrations.CreateModel(
            name="MeasureExcludedGeographicalArea",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                (
                    "excluded_geographical_area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="geo_areas.geographicalarea",
                    ),
                ),
                (
                    "modified_measure",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="exclusions",
                        to="measures.measure",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel",),
        ),
        migrations.CreateModel(
            name="MeasureConditionComponent",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                (
                    "duty_amount",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=10, null=True
                    ),
                ),
                (
                    "condition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="components",
                        to="measures.measurecondition",
                    ),
                ),
                (
                    "condition_component_measurement",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="measures.measurement",
                    ),
                ),
                (
                    "duty_expression",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="measures.dutyexpression",
                    ),
                ),
                (
                    "monetary_unit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="measures.monetaryunit",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel",),
        ),
        migrations.AddField(
            model_name="measurecondition",
            name="condition_code",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="conditions",
                to="measures.measureconditioncode",
            ),
        ),
        migrations.AddField(
            model_name="measurecondition",
            name="condition_measurement",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="measures.measurement",
            ),
        ),
        migrations.AddField(
            model_name="measurecondition",
            name="dependent_measure",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="conditions",
                to="measures.measure",
            ),
        ),
        migrations.AddField(
            model_name="measurecondition",
            name="monetary_unit",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="measures.monetaryunit",
            ),
        ),
        migrations.AddField(
            model_name="measurecondition",
            name="required_certificate",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="certificates.certificate",
            ),
        ),
        migrations.CreateModel(
            name="MeasureComponent",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.trackedmodel",
                    ),
                ),
                (
                    "duty_amount",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=10, null=True
                    ),
                ),
                (
                    "component_measure",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="components",
                        to="measures.measure",
                    ),
                ),
                (
                    "component_measurement",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="measures.measurement",
                    ),
                ),
                (
                    "duty_expression",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="measures.dutyexpression",
                    ),
                ),
                (
                    "monetary_unit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="measures.monetaryunit",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("common.trackedmodel",),
        ),
        migrations.AddField(
            model_name="measure",
            name="measure_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="measures.measuretype"
            ),
        ),
    ]

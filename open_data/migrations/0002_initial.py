# Generated by Django 4.2.16 on 2025-02-03 16:56

import django.db.models.deletion
from django.db import migrations
from django.db import models

import common.fields


class Migration(migrations.Migration):

    dependencies = [
        ("open_data", "0001_create_schema"),
    ]

    operations = [
        migrations.CreateModel(
            name="ReportAdditionalCode",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="additional_codes.additionalcode",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("sid", models.IntegerField()),
                ("code", models.CharField(max_length=3)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": 'reporting"."open_data_reportadditionalcode',
            },
        ),
        migrations.CreateModel(
            name="ReportAdditionalCodeType",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="additional_codes.additionalcodetype",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("sid", models.CharField(max_length=1)),
                (
                    "description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("application_code", models.SmallIntegerField()),
            ],
            options={
                "db_table": 'reporting"."open_data_reportadditionalcodetype',
            },
        ),
        migrations.CreateModel(
            name="ReportCertificate",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="certificates.certificate",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("sid", models.CharField(max_length=3)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": 'reporting"."open_data_reportcertificate',
            },
        ),
        migrations.CreateModel(
            name="ReportCertificateType",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="certificates.certificatetype",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("sid", models.CharField(max_length=1)),
                (
                    "description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportcertificatetype',
            },
        ),
        migrations.CreateModel(
            name="ReportDutyExpression",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="measures.dutyexpression",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("sid", models.IntegerField()),
                ("prefix", models.CharField(max_length=14)),
                ("duty_amount_applicability_code", models.SmallIntegerField()),
                ("measurement_unit_applicability_code", models.SmallIntegerField()),
                ("monetary_unit_applicability_code", models.SmallIntegerField()),
                (
                    "description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportdutyexpression',
            },
        ),
        migrations.CreateModel(
            name="ReportFootnote",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="footnotes.footnote",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("footnote_id", models.CharField(max_length=5)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": 'reporting"."open_data_reportfootnote',
            },
        ),
        migrations.CreateModel(
            name="ReportFootnoteType",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="footnotes.footnotetype",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("footnote_type_id", models.CharField(max_length=3)),
                ("application_code", models.IntegerField()),
                (
                    "description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportfootnotetype',
            },
        ),
        migrations.CreateModel(
            name="ReportGeographicalArea",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="geo_areas.geographicalarea",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("sid", models.IntegerField()),
                ("area_id", models.CharField(max_length=4)),
                ("area_code", models.SmallIntegerField()),
                (
                    "description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "is_single_region_or_country",
                    models.BooleanField(blank=True, null=True),
                ),
                ("is_group", models.BooleanField(blank=True, null=True)),
                ("is_all_countries", models.BooleanField(blank=True, null=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportgeographicalarea",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportgeographicalarea',
            },
        ),
        migrations.CreateModel(
            name="ReportGoodsNomenclature",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="commodities.goodsnomenclature",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("sid", models.IntegerField()),
                ("item_id", models.CharField(max_length=10)),
                ("suffix", models.CharField(max_length=2)),
                ("statistical", models.BooleanField()),
                ("indent", models.IntegerField(null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "parent_trackedmodel_ptr",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportgoodsnomenclature",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportgoodsnomenclature',
            },
        ),
        migrations.CreateModel(
            name="ReportGroup",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="regulations.group",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("group_id", models.CharField(max_length=3)),
                (
                    "description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportgroup',
            },
        ),
        migrations.CreateModel(
            name="ReportMeasure",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="measures.measure",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("sid", models.IntegerField()),
                (
                    "dead_additional_code",
                    models.CharField(blank=True, max_length=16, null=True),
                ),
                (
                    "dead_order_number",
                    models.CharField(blank=True, max_length=6, null=True),
                ),
                ("reduction", models.SmallIntegerField(blank=True, null=True)),
                ("stopped", models.BooleanField()),
                (
                    "export_refund_nomenclature_sid",
                    models.IntegerField(blank=True, null=True),
                ),
                ("duty_sentence", models.TextField(blank=True, null=True)),
                (
                    "additional_code",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportadditionalcode",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportmeasure',
            },
        ),
        migrations.CreateModel(
            name="ReportMeasureAction",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="measures.measureaction",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("code", models.CharField(max_length=3)),
                (
                    "description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("requires_duty", models.BooleanField()),
            ],
            options={
                "db_table": 'reporting"."open_data_reportmeasureaction',
            },
        ),
        migrations.CreateModel(
            name="ReportMeasureCondition",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="measures.measurecondition",
                    ),
                ),
                ("sid", models.IntegerField()),
                ("component_sequence_number", models.SmallIntegerField()),
                (
                    "duty_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                    ),
                ),
                ("reference_price", models.TextField(blank=True, null=True)),
                (
                    "action",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportmeasureaction",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportmeasurecondition',
            },
        ),
        migrations.CreateModel(
            name="ReportMeasureConditionCode",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="measures.measureconditioncode",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("code", models.CharField(max_length=2)),
                (
                    "description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("accepts_certificate", models.BooleanField()),
                ("accepts_price", models.BooleanField()),
            ],
            options={
                "db_table": 'reporting"."open_data_reportmeasureconditioncode',
            },
        ),
        migrations.CreateModel(
            name="ReportMeasurementUnit",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="measures.measurementunit",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("code", models.CharField(max_length=3)),
                (
                    "description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("abbreviation", models.CharField(max_length=32)),
            ],
            options={
                "db_table": 'reporting"."open_data_reportmeasurementunit',
            },
        ),
        migrations.CreateModel(
            name="ReportMeasurementUnitQualifier",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="measures.measurementunitqualifier",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("code", models.CharField(max_length=1)),
                (
                    "description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("abbreviation", models.CharField(max_length=32)),
            ],
            options={
                "db_table": 'reporting"."open_data_reportmeasurementunitqualifier',
            },
        ),
        migrations.CreateModel(
            name="ReportMeasureTypeSeries",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="measures.measuretypeseries",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("sid", models.CharField(max_length=2)),
                ("measure_type_combination", models.SmallIntegerField()),
                (
                    "description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportmeasuretypeseries',
            },
        ),
        migrations.CreateModel(
            name="ReportMonetaryUnit",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="measures.monetaryunit",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("code", models.CharField(max_length=3)),
                (
                    "description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportmonetaryunit',
            },
        ),
        migrations.CreateModel(
            name="ReportQuotaDefinition",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="quotas.quotadefinition",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("sid", models.IntegerField()),
                ("volume", models.DecimalField(decimal_places=3, max_digits=14)),
                (
                    "initial_volume",
                    models.DecimalField(decimal_places=3, max_digits=14),
                ),
                ("maximum_precision", models.SmallIntegerField()),
                ("quota_critical", models.BooleanField()),
                ("quota_critical_threshold", models.SmallIntegerField()),
                (
                    "description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "measurement_unit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportmeasurementunit",
                    ),
                ),
                (
                    "measurement_unit_qualifier",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportmeasurementunitqualifier",
                    ),
                ),
                (
                    "monetary_unit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportmonetaryunit",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportquotadefinition',
            },
        ),
        migrations.CreateModel(
            name="ReportQuotaOrderNumber",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="quotas.quotaordernumber",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("sid", models.IntegerField()),
                ("order_number", models.CharField(max_length=6)),
                ("mechanism", models.SmallIntegerField()),
                ("category", models.SmallIntegerField()),
            ],
            options={
                "db_table": 'reporting"."open_data_reportquotaordernumber',
            },
        ),
        migrations.CreateModel(
            name="ReportQuotaOrderNumberOrigin",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="quotas.quotaordernumberorigin",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("sid", models.IntegerField()),
                (
                    "geographical_area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportgeographicalarea",
                    ),
                ),
                (
                    "order_number",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportquotaordernumber",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportquotaordernumberorigin',
            },
        ),
        migrations.CreateModel(
            name="ReportRegulation",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="regulations.regulation",
                    ),
                ),
                ("role_type", models.IntegerField()),
                ("regulation_id", models.CharField(max_length=8)),
                (
                    "official_journal_number",
                    models.CharField(blank=True, max_length=5, null=True),
                ),
                (
                    "official_journal_page",
                    models.SmallIntegerField(blank=True, null=True),
                ),
                ("published_at", models.DateField(blank=True, null=True)),
                (
                    "information_text",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "public_identifier",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("url", models.CharField(blank=True, max_length=200, null=True)),
                ("approved", models.BooleanField()),
                ("replacement_indicator", models.IntegerField()),
                ("valid_between", models.TextField(blank=True, null=True)),
                ("effective_end_date", models.DateField(blank=True, null=True)),
                ("stopped", models.BooleanField()),
                ("community_code", models.IntegerField(blank=True, null=True)),
                (
                    "regulation_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportgroup",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportregulation',
            },
        ),
        migrations.CreateModel(
            name="ReportSuspension",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="regulations.suspension",
                    ),
                ),
                ("effective_end_date", models.DateField(blank=True, null=True)),
                (
                    "enacting_regulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportregulation",
                    ),
                ),
                (
                    "target_regulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="regulationssuspension_target_regulation_set",
                        to="open_data.reportregulation",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportsuspension',
            },
        ),
        migrations.CreateModel(
            name="ReportReplacement",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="regulations.replacement",
                    ),
                ),
                (
                    "measure_type_id",
                    models.CharField(blank=True, max_length=6, null=True),
                ),
                (
                    "geographical_area_id",
                    models.CharField(blank=True, max_length=4, null=True),
                ),
                (
                    "chapter_heading",
                    models.CharField(blank=True, max_length=2, null=True),
                ),
                (
                    "enacting_regulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportregulation",
                    ),
                ),
                (
                    "target_regulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="regulationsreplacement_target_regulation_set",
                        to="open_data.reportregulation",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportreplacement',
            },
        ),
        migrations.CreateModel(
            name="ReportQuotaSuspension",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="quotas.quotasuspension",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("sid", models.IntegerField()),
                (
                    "description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "quota_definition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportquotadefinition",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportquotasuspension',
            },
        ),
        migrations.CreateModel(
            name="ReportQuotaOrderNumberOriginExclusion",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="quotas.quotaordernumberoriginexclusion",
                    ),
                ),
                (
                    "excluded_geographical_area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportgeographicalarea",
                    ),
                ),
                (
                    "origin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportquotaordernumberorigin",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportquotaordernumberoriginexclusion',
            },
        ),
        migrations.CreateModel(
            name="ReportQuotaEvent",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="quotas.quotaevent",
                    ),
                ),
                ("subrecord_code", models.CharField(max_length=2)),
                ("occurrence_timestamp", models.DateTimeField()),
                ("data", models.JSONField()),
                (
                    "quota_definition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportquotadefinition",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportquotaevent',
            },
        ),
        migrations.AddField(
            model_name="reportquotadefinition",
            name="order_number",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="open_data.reportquotaordernumber",
            ),
        ),
        migrations.CreateModel(
            name="ReportQuotaBlocking",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="quotas.quotablocking",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("sid", models.IntegerField()),
                ("blocking_period_type", models.SmallIntegerField()),
                (
                    "description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "quota_definition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportquotadefinition",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportquotablocking',
            },
        ),
        migrations.CreateModel(
            name="ReportQuotaAssociation",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="quotas.quotaassociation",
                    ),
                ),
                ("sub_quota_relation_type", models.CharField(max_length=2)),
                ("coefficient", models.DecimalField(decimal_places=5, max_digits=16)),
                (
                    "main_quota",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportquotadefinition",
                    ),
                ),
                (
                    "sub_quota",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="quotasquotaassociation_sub_quota_set",
                        to="open_data.reportquotadefinition",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportquotaassociation',
            },
        ),
        migrations.CreateModel(
            name="ReportMeasureType",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="measures.measuretype",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                ("sid", models.CharField(max_length=6)),
                ("trade_movement_code", models.SmallIntegerField()),
                ("priority_code", models.SmallIntegerField()),
                ("measure_component_applicability_code", models.SmallIntegerField()),
                ("origin_destination_code", models.SmallIntegerField()),
                ("order_number_capture_code", models.SmallIntegerField()),
                ("measure_explosion_level", models.SmallIntegerField()),
                (
                    "description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "measure_type_series",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportmeasuretypeseries",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportmeasuretype',
            },
        ),
        migrations.CreateModel(
            name="ReportMeasurement",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="measures.measurement",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                (
                    "measurement_unit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportmeasurementunit",
                    ),
                ),
                (
                    "measurement_unit_qualifier",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportmeasurementunitqualifier",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportmeasurement',
            },
        ),
        migrations.CreateModel(
            name="ReportMeasureExcludedGeographicalArea",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="measures.measureexcludedgeographicalarea",
                    ),
                ),
                (
                    "excluded_geographical_area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportgeographicalarea",
                    ),
                ),
                (
                    "modified_measure",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportmeasure",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportmeasureexcludedgeographicalarea',
            },
        ),
        migrations.CreateModel(
            name="ReportMeasureConditionComponent",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="measures.measureconditioncomponent",
                    ),
                ),
                (
                    "duty_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "component_measurement",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportmeasurement",
                    ),
                ),
                (
                    "condition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportmeasurecondition",
                    ),
                ),
                (
                    "duty_expression",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportdutyexpression",
                    ),
                ),
                (
                    "monetary_unit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportmonetaryunit",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportmeasureconditioncomponent',
            },
        ),
        migrations.AddField(
            model_name="reportmeasurecondition",
            name="condition_code",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="open_data.reportmeasureconditioncode",
            ),
        ),
        migrations.AddField(
            model_name="reportmeasurecondition",
            name="condition_measurement",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="open_data.reportmeasurement",
            ),
        ),
        migrations.AddField(
            model_name="reportmeasurecondition",
            name="dependent_measure",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="open_data.reportmeasure",
            ),
        ),
        migrations.AddField(
            model_name="reportmeasurecondition",
            name="monetary_unit",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="open_data.reportmonetaryunit",
            ),
        ),
        migrations.AddField(
            model_name="reportmeasurecondition",
            name="required_certificate",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="open_data.reportcertificate",
            ),
        ),
        migrations.CreateModel(
            name="ReportMeasureComponent",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="measures.measurecomponent",
                    ),
                ),
                (
                    "duty_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "component_measure",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportmeasure",
                    ),
                ),
                (
                    "component_measurement",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportmeasurement",
                    ),
                ),
                (
                    "duty_expression",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportdutyexpression",
                    ),
                ),
                (
                    "monetary_unit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportmonetaryunit",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportmeasurecomponent',
            },
        ),
        migrations.AddField(
            model_name="reportmeasure",
            name="generating_regulation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="open_data.reportregulation",
            ),
        ),
        migrations.AddField(
            model_name="reportmeasure",
            name="geographical_area",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="open_data.reportgeographicalarea",
            ),
        ),
        migrations.AddField(
            model_name="reportmeasure",
            name="goods_nomenclature",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="open_data.reportgoodsnomenclature",
            ),
        ),
        migrations.AddField(
            model_name="reportmeasure",
            name="measure_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="open_data.reportmeasuretype",
            ),
        ),
        migrations.AddField(
            model_name="reportmeasure",
            name="order_number",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="open_data.reportquotaordernumber",
            ),
        ),
        migrations.AddField(
            model_name="reportmeasure",
            name="terminating_regulation",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="measuresmeasure_terminating_regulation_set",
                to="open_data.reportregulation",
            ),
        ),
        migrations.CreateModel(
            name="ReportGoodsNomenclatureSuccessor",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="commodities.goodsnomenclaturesuccessor",
                    ),
                ),
                (
                    "absorbed_into_goods_nomenclature",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportgoodsnomenclature",
                    ),
                ),
                (
                    "replaced_goods_nomenclature",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="commoditiesgoodsnomenclaturesuccessor_replaced_goods_nomenclature_set",
                        to="open_data.reportgoodsnomenclature",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportgoodsnomenclaturesuccessor',
            },
        ),
        migrations.CreateModel(
            name="ReportGoodsNomenclatureOrigin",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="commodities.goodsnomenclatureorigin",
                    ),
                ),
                (
                    "derived_from_goods_nomenclature",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportgoodsnomenclature",
                    ),
                ),
                (
                    "new_goods_nomenclature",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="commoditiesgoodsnomenclatureorigin_new_goods_nomenclature_set",
                        to="open_data.reportgoodsnomenclature",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportgoodsnomenclatureorigin',
            },
        ),
        migrations.CreateModel(
            name="ReportGeographicalMembership",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="geo_areas.geographicalmembership",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                (
                    "geo_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportgeographicalarea",
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="geoareasgeographicalmembership_member_set",
                        to="open_data.reportgeographicalarea",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportgeographicalmembership',
            },
        ),
        migrations.CreateModel(
            name="ReportFootnoteAssociationMeasure",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="measures.footnoteassociationmeasure",
                    ),
                ),
                (
                    "associated_footnote",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportfootnote",
                    ),
                ),
                (
                    "footnoted_measure",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportmeasure",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportfootnoteassociationmeasure',
            },
        ),
        migrations.CreateModel(
            name="ReportFootnoteAssociationGoodsNomenclature",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="commodities.footnoteassociationgoodsnomenclature",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                (
                    "associated_footnote",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportfootnote",
                    ),
                ),
                (
                    "goods_nomenclature",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportgoodsnomenclature",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportfootnoteassociationgoodsnomenclature',
            },
        ),
        migrations.AddField(
            model_name="reportfootnote",
            name="footnote_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="open_data.reportfootnotetype",
            ),
        ),
        migrations.AddField(
            model_name="reportcertificate",
            name="certificate_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="open_data.reportcertificatetype",
            ),
        ),
        migrations.CreateModel(
            name="ReportAmendment",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="regulations.amendment",
                    ),
                ),
                (
                    "enacting_regulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportregulation",
                    ),
                ),
                (
                    "target_regulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="regulationsamendment_target_regulation_set",
                        to="open_data.reportregulation",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportamendment',
            },
        ),
        migrations.CreateModel(
            name="ReportAdditionalCodeTypeMeasureType",
            fields=[
                (
                    "trackedmodel_ptr",
                    models.OneToOneField(
                        db_column="trackedmodel_ptr_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="measures.additionalcodetypemeasuretype",
                    ),
                ),
                ("valid_between", common.fields.TaricDateRangeField(db_index=True)),
                (
                    "additional_code_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportadditionalcodetype",
                    ),
                ),
                (
                    "measure_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="open_data.reportmeasuretype",
                    ),
                ),
            ],
            options={
                "db_table": 'reporting"."open_data_reportadditionalcodetypemeasuretype',
            },
        ),
        migrations.AddField(
            model_name="reportadditionalcode",
            name="type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="open_data.reportadditionalcodetype",
            ),
        ),
    ]

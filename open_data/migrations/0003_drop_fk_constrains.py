# Generated by Django 4.2.15 on 2024-10-30 11:17

from django.db import migrations

# It will be impossible to update the tables in the open data area with the
# foreign keys constrain in place. But it is useful to declare them in the Django
# models, so Django will create the correct queryset: the following query t
# dropped them in the database while they are still the model definition.
# The 'magic' query has been copied from somewhere in Stackoverflow!


drop_fk_sql = """
DO $$DECLARE r record;
    BEGIN
        FOR r IN SELECT table_schema, table_name, constraint_name
				FROM information_schema.table_constraints AS tc 
				WHERE tc.constraint_type = 'FOREIGN KEY' AND tc.table_schema='reporting'
        LOOP
            EXECUTE 'ALTER TABLE '|| quote_ident(r.table_schema) || '.' || quote_ident(r.table_name)|| ' DROP CONSTRAINT '|| quote_ident(r.constraint_name) || ';';
        END LOOP;
    END$$;
"""


def forwards(apps, schema_editor):
    if schema_editor.connection.vendor.find("postgres") != -1:
        try:
            schema_editor.execute(drop_fk_sql)
        except:
            print(f"ERROR: Not Postgres database")


class Migration(migrations.Migration):

    dependencies = [
        ("open_data", "0002_initial"),
    ]

    operations = [
        migrations.RunPython(forwards),
    ]

# Generated by Django 3.1 on 2020-12-29 11:47
import django.core.validators
import django.db.models.deletion
from django.db import migrations
from django.db import models

import common.fields
import common.validators
import measures.validators


class Migration(migrations.Migration):

    dependencies = [
        ("geo_areas", "0008_auto_20201229_1147"),
        ("footnotes", "0010_auto_20201229_1147"),
        ("measures", "0008_auto_20201027_1022"),
    ]

    operations = [
        migrations.AddField(
            model_name="measure",
            name="dead_additional_code",
            field=models.CharField(blank=True, db_index=True, max_length=16, null=True),
        ),
        migrations.AddField(
            model_name="measure",
            name="dead_order_number",
            field=models.CharField(
                blank=True,
                db_index=True,
                max_length=6,
                null=True,
                validators=[django.core.validators.RegexValidator("^[0-9]{6}$")],
            ),
        ),
        migrations.AddField(
            model_name="measure",
            name="footnotes",
            field=models.ManyToManyField(
                through="measures.FootnoteAssociationMeasure", to="footnotes.Footnote"
            ),
        ),
        migrations.AlterField(
            model_name="additionalcodetypemeasuretype",
            name="valid_between",
            field=common.fields.TaricDateTimeRangeField(db_index=True),
        ),
        migrations.AlterField(
            model_name="dutyexpression",
            name="sid",
            field=models.IntegerField(
                choices=[
                    (1, "% or amount"),
                    (2, "minus\xa0% or amount"),
                    (3, "The rate is replaced by the levy"),
                    (4, "+\xa0% or amount"),
                    (5, "The rate is replaced by the reduced levy"),
                    (6, "+ Suplementary amount"),
                    (7, "+ Levy"),
                    (9, "+ Reduced levy"),
                    (11, "+ Variable component"),
                    (12, "+ agricultural component"),
                    (13, "+ Reduced variable component"),
                    (14, "+ reduced agricultural component"),
                    (15, "Minimum"),
                    (17, "Maximum"),
                    (19, "+\xa0% or amount"),
                    (20, "+\xa0% or amount"),
                    (21, "+ additional duty on sugar"),
                    (23, "+ 2\xa0% Additional duty on sugar"),
                    (25, "+ reduced additional duty on sugar"),
                    (27, "+ additional duty on flour"),
                    (29, "+ reduced additional duty on flour"),
                    (31, "Accession compensatory amount"),
                    (33, "+ Accession compensatory amount"),
                    (35, "Maximum"),
                    (36, "minus\xa0% CIF"),
                    (37, "(nothing)"),
                    (40, "Export refunds for cereals"),
                    (41, "Export refunds for rice"),
                    (42, "Export refunds for eggs"),
                    (43, "Export refunds for sugar"),
                    (44, "Export refunds for milk products"),
                    (99, "Supplementary unit"),
                ],
                db_index=True,
            ),
        ),
        migrations.AlterField(
            model_name="dutyexpression",
            name="valid_between",
            field=common.fields.TaricDateTimeRangeField(db_index=True),
        ),
        migrations.AlterField(
            model_name="measure",
            name="geographical_area",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="measures",
                to="geo_areas.geographicalarea",
            ),
        ),
        migrations.AlterField(
            model_name="measure",
            name="reduction",
            field=models.PositiveSmallIntegerField(
                blank=True,
                db_index=True,
                null=True,
                validators=[common.validators.NumberRangeValidator(1, 9)],
            ),
        ),
        migrations.AlterField(
            model_name="measure",
            name="valid_between",
            field=common.fields.TaricDateTimeRangeField(db_index=True),
        ),
        migrations.AlterField(
            model_name="measureaction",
            name="code",
            field=models.CharField(
                db_index=True,
                max_length=3,
                validators=[measures.validators.validate_action_code],
            ),
        ),
        migrations.AlterField(
            model_name="measureaction",
            name="valid_between",
            field=common.fields.TaricDateTimeRangeField(db_index=True),
        ),
        migrations.AlterField(
            model_name="measurecomponent",
            name="component_measure",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="components",
                to="measures.measure",
            ),
        ),
        migrations.AlterField(
            model_name="measurecondition",
            name="condition_code",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="conditions",
                to="measures.measureconditioncode",
            ),
        ),
        migrations.AlterField(
            model_name="measurecondition",
            name="dependent_measure",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="conditions",
                to="measures.measure",
            ),
        ),
        migrations.AlterField(
            model_name="measureconditioncode",
            name="code",
            field=models.CharField(
                db_index=True,
                max_length=2,
                validators=[django.core.validators.RegexValidator("^[A-Z][A-Z ]?$")],
            ),
        ),
        migrations.AlterField(
            model_name="measureconditioncode",
            name="valid_between",
            field=common.fields.TaricDateTimeRangeField(db_index=True),
        ),
        migrations.AlterField(
            model_name="measureexcludedgeographicalarea",
            name="modified_measure",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="exclusions",
                to="measures.measure",
            ),
        ),
        migrations.AlterField(
            model_name="measurement",
            name="valid_between",
            field=common.fields.TaricDateTimeRangeField(db_index=True),
        ),
        migrations.AlterField(
            model_name="measurementunit",
            name="code",
            field=models.CharField(
                db_index=True,
                max_length=3,
                validators=[django.core.validators.RegexValidator("^[A-Z0-9]{3}$")],
            ),
        ),
        migrations.AlterField(
            model_name="measurementunit",
            name="valid_between",
            field=common.fields.TaricDateTimeRangeField(db_index=True),
        ),
        migrations.AlterField(
            model_name="measurementunitqualifier",
            name="code",
            field=models.CharField(
                db_index=True,
                max_length=1,
                validators=[django.core.validators.RegexValidator("^[A-Z]$")],
            ),
        ),
        migrations.AlterField(
            model_name="measurementunitqualifier",
            name="valid_between",
            field=common.fields.TaricDateTimeRangeField(db_index=True),
        ),
        migrations.AlterField(
            model_name="measuretype",
            name="sid",
            field=models.CharField(
                db_index=True,
                max_length=6,
                validators=[
                    django.core.validators.RegexValidator(
                        "^[0-9]{3}|[0-9]{6}|[A-Z]{3}$"
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name="measuretype",
            name="valid_between",
            field=common.fields.TaricDateTimeRangeField(db_index=True),
        ),
        migrations.AlterField(
            model_name="measuretypeseries",
            name="sid",
            field=models.CharField(
                db_index=True,
                max_length=2,
                validators=[django.core.validators.RegexValidator("^[A-Z][A-Z ]?$")],
            ),
        ),
        migrations.AlterField(
            model_name="measuretypeseries",
            name="valid_between",
            field=common.fields.TaricDateTimeRangeField(db_index=True),
        ),
        migrations.AlterField(
            model_name="monetaryunit",
            name="code",
            field=models.CharField(
                db_index=True,
                max_length=3,
                validators=[django.core.validators.RegexValidator("^[A-Z]{3}$")],
            ),
        ),
        migrations.AlterField(
            model_name="monetaryunit",
            name="valid_between",
            field=common.fields.TaricDateTimeRangeField(db_index=True),
        ),
    ]
